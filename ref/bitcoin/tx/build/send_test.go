package build_test

import (
	"fmt"
	"github.com/memocash/index/ref/bitcoin/memo"
	"github.com/memocash/index/ref/bitcoin/tx/build"
	"github.com/memocash/index/ref/bitcoin/tx/gen"
	"github.com/memocash/index/ref/bitcoin/tx/script"
	"github.com/memocash/index/ref/bitcoin/util/testing/test_tx"
	"github.com/memocash/index/ref/bitcoin/wallet"
	"log"
	"testing"
)

type SendTest struct {
	Request  build.SendRequest
	Error    error
	TxHashes []test_tx.TxHash
}

func TestSend(t *testing.T) {
	for j, sendTest := range sendTests {
		tx, err := build.Send(sendTest.Request)
		if testing.Verbose() {
			log.Printf("SendTest %d:\n", j)
		}
		test_tx.Checker{
			Name:     fmt.Sprintf("TestSend %d", j),
			Txs:      []*memo.Tx{tx},
			Error:    sendTest.Error,
			TxHashes: sendTest.TxHashes,
		}.Check(err, t)
	}
}

var sendTest0simple = SendTest{
	Request: build.SendRequest{
		Wallet:  test_tx.GetAddress1WalletSingle100k(),
		Address: test_tx.Address2,
		Message: test_tx.TestMessage,
		Amount:  1000,
	},
	TxHashes: []test_tx.TxHash{{
		TxHash: "26524cb52e5b54692916858d1834510967bddadf3a1f03acc2fdcc992335f8a9",
		TxRaw:  "0100000001290c9e545233529c68f1efac662cb3370df17d08cdbaa7e63e04284e670ffef4000000006a473044022008f7d151e959b39752901c8be40f275672e52a282c898522954f8cd7baf05cbc02203f9ad381815441401c8fc139755c3576bf73703d06cb4265ada7ff1e0852e783412103065e9c67d6ef37c1b08f88d74a4b2090aa8d69f2e6ab5c116f60f05a78f2ededffffffff030000000000000000266a026d24140d4cd6490ddf863bbdf5c34d8ef1aebfd45c21050c53656e64206d657373616765e8030000000000001976a9140d4cd6490ddf863bbdf5c34d8ef1aebfd45c210588aca7810100000000001976a914fc393e225549da044ed2c0011fd6c8a799806b6288ac00000000",
	}},
}

var sendTest1simpleNoMessage = SendTest{
	Request: build.SendRequest{
		Wallet:  test_tx.GetAddress1WalletSingle100k(),
		Address: test_tx.Address2,
		Amount:  1000,
	},
	TxHashes: []test_tx.TxHash{{
		TxHash: "9a041c0f298abd8c5779fc416db5941330ea9207fac7b90ba076c520385e602a",
		TxRaw:  "0100000001290c9e545233529c68f1efac662cb3370df17d08cdbaa7e63e04284e670ffef4000000006a473044022038b08cf34dff5f4aa0264f46ea410f38b5c99a96e11217f041a6c2d0e24b1ac602201a419777aafed606ba7eda20cbd735b09a3f3ba4c8d2777dba4981037377bb49412103065e9c67d6ef37c1b08f88d74a4b2090aa8d69f2e6ab5c116f60f05a78f2ededffffffff02e8030000000000001976a9140d4cd6490ddf863bbdf5c34d8ef1aebfd45c210588acd6810100000000001976a914fc393e225549da044ed2c0011fd6c8a799806b6288ac00000000",
	}},
}

var sendTest2p2sh = SendTest{
	Request: build.SendRequest{
		Wallet:  test_tx.GetAddress1WalletSingle100k(),
		Address: test_tx.AddressP2sh1,
		Message: test_tx.TestMessage,
		Amount:  1000,
	},
	TxHashes: []test_tx.TxHash{{
		TxHash: "c236b74026ef985486155ee5c4d48dc6af646d571f626cee6e27adfaa9da4bf3",
		TxRaw:  "0100000001290c9e545233529c68f1efac662cb3370df17d08cdbaa7e63e04284e670ffef4000000006b48304502210091b1d533b907afbae9e8c2b74c82b4841ec9b37c7723f52a3b7f0b848ddd97c302202f4f990d563b5f7e5e82ff607bc85896500715e70302729d1d6d193d80577fde412103065e9c67d6ef37c1b08f88d74a4b2090aa8d69f2e6ab5c116f60f05a78f2ededffffffff030000000000000000266a026d2414dd763c90ae1a5677d925c680673bba0a5e2874050c53656e64206d657373616765e80300000000000017a914dd763c90ae1a5677d925c680673bba0a5e28740587a9810100000000001976a914fc393e225549da044ed2c0011fd6c8a799806b6288ac00000000",
	}},
}

var sendTest2p2shNoMessage = SendTest{
	Request: build.SendRequest{
		Wallet:  test_tx.GetAddress1WalletSingle100k(),
		Address: test_tx.AddressP2sh1,
		Amount:  1000,
	},
	TxHashes: []test_tx.TxHash{{
		TxHash: "e80020b88aafc25dd0431b5401a56b3d9478d82f0f470261f2580b2de6a30dee",
		TxRaw:  "0100000001290c9e545233529c68f1efac662cb3370df17d08cdbaa7e63e04284e670ffef4000000006b483045022100a033fa47eb91df9bd5af17107b84dfb5ebe7fda9664b1a6ccd52c0523fb54ffe02200e543f43266d9bff5eac4e87398039831d0790eb50539d27dfda5d91de6682e7412103065e9c67d6ef37c1b08f88d74a4b2090aa8d69f2e6ab5c116f60f05a78f2ededffffffff02e80300000000000017a914dd763c90ae1a5677d925c680673bba0a5e28740587d8810100000000001976a914fc393e225549da044ed2c0011fd6c8a799806b6288ac00000000",
	}},
}

var sendTest4 = SendTest{
	Request: build.SendRequest{
		Wallet: build.Wallet{
			Getter:  gen.GetWrapper(&test_tx.TestGetter{UTXOs: test_tx.GetUtxosTestSet1()}, test_tx.Address1pkHash),
			Address: test_tx.Address1,
			KeyRing: wallet.GetSingleKeyRing(test_tx.Address1key),
		},
		Address: test_tx.AddressP2sh1,
		Amount:  test_tx.UtxosTestSet1MaxSend,
	},
	TxHashes: []test_tx.TxHash{{
		TxHash: "fac08035089552b09943993662e9420dfa092a95d3b6685ce70d2e37caf538cc",
		TxRaw:  "010000000643ec7a579f5561a42a7e9637ad4156672735a658be2752181801f723ba3316d2000000006b483045022100efb78294e769462d4645a4d5150166742c67fa4551257959b22e4a2d4b7c204202203f8408d2327927c3afc6213f1368b5a96898fbe70bb1d3aae07efd973012ef4c412103065e9c67d6ef37c1b08f88d74a4b2090aa8d69f2e6ab5c116f60f05a78f2ededffffffff43ec7a579f5561a42a7e9637ad4156672735a658be2752181801f723ba3316d2010000006b483045022100b7a4a8bd2b0532a2207d1f0c7bda1bb7ecf41458d9e558f4c9358c4b1c0f848b02203f698e965ea700d6121ebf8611beb64d1233874590b9e891361b48ae9b8df275412103065e9c67d6ef37c1b08f88d74a4b2090aa8d69f2e6ab5c116f60f05a78f2ededffffffff43ec7a579f5561a42a7e9637ad4156672735a658be2752181801f723ba3316d2020000006b483045022100de39e6b15052e97761e52004e4aae542faeb623d4a656f9a6e7100f04907b9ef02203707607824f3d92713b91b4228225fe228510fe40e4d559716fca990847529a0412103065e9c67d6ef37c1b08f88d74a4b2090aa8d69f2e6ab5c116f60f05a78f2ededffffffff43ec7a579f5561a42a7e9637ad4156672735a658be2752181801f723ba3316d2030000006b483045022100a271406b2d50d7dd7b36b8a08df4175e7a71e4fe619db885c03dab0bb0964c4702202df822efacaa7e5e5039b66323388d8bb4b2bf2ffdf93a14287e8b7fa8970d0a412103065e9c67d6ef37c1b08f88d74a4b2090aa8d69f2e6ab5c116f60f05a78f2ededffffffff43ec7a579f5561a42a7e9637ad4156672735a658be2752181801f723ba3316d2040000006a473044022050a2975b445582bd596b8bb818e47bfe8ef964b6aa69d6a3edf94d5f07ecaf5002203c1f5031b9afc0d95e6487b1f95fcb4c75e54bbaad1b0c3cbb333f2540852b33412103065e9c67d6ef37c1b08f88d74a4b2090aa8d69f2e6ab5c116f60f05a78f2ededffffffff43ec7a579f5561a42a7e9637ad4156672735a658be2752181801f723ba3316d2050000006a47304402204c3842aef4e5986a1c26c08062edea3bb576061e5ebc714f2e501bc305b1d34f022072ca3523d1a224ea24071817d3d9f1c0cc19d2ba11af2a428aed3c4d8b4fb00c412103065e9c67d6ef37c1b08f88d74a4b2090aa8d69f2e6ab5c116f60f05a78f2ededffffffff0126ef01000000000017a914dd763c90ae1a5677d925c680673bba0a5e2874058700000000",
	}},
}

var sendTest5 = SendTest{
	Request: build.SendRequest{
		Wallet: build.Wallet{
			Getter:  gen.GetWrapper(&test_tx.TestGetter{UTXOs: test_tx.GetUtxosTestSet1()}, test_tx.Address1pkHash),
			Address: test_tx.Address1,
			KeyRing: wallet.GetSingleKeyRing(test_tx.Address1key),
		},
		Message: test_tx.TestMessage,
		Address: test_tx.AddressP2sh1,
		Amount:  test_tx.UtxosTestSet1MaxSend - memo.OutputFeeOpReturn - memo.PkHashLength - memo.OutputOpDataFee - script.Len64([]byte(test_tx.TestMessage)),
	},
	TxHashes: []test_tx.TxHash{{
		TxHash: "b300f7e5f233e03327ded693e5b64166ad3d7b2bd1ac58b729669121ac4ec95e",
		TxRaw:  "010000000643ec7a579f5561a42a7e9637ad4156672735a658be2752181801f723ba3316d2000000006b483045022100961964c968e4f4acd0131f8bf19fed4a5d0e552be2dd8117a57f37f2977d5ba2022064acbe17dc8ea9c01b204126370071344f1da93d6933c56fb523489b0785ba86412103065e9c67d6ef37c1b08f88d74a4b2090aa8d69f2e6ab5c116f60f05a78f2ededffffffff43ec7a579f5561a42a7e9637ad4156672735a658be2752181801f723ba3316d2010000006b48304502210085b92582cbcbe9abf1da7b95ba36a433b6b0c97644e617217cc9e53be493d9e402207265f428948d006186131cd99e7616aeeff6fc96aa14bdc59ac09ab1bec98904412103065e9c67d6ef37c1b08f88d74a4b2090aa8d69f2e6ab5c116f60f05a78f2ededffffffff43ec7a579f5561a42a7e9637ad4156672735a658be2752181801f723ba3316d2020000006a4730440220688b5b691d6449643fe1c9193056036f5653c225b38299e34ba1d17a278117f102207c5b7e385b4d2c0645c6845d0c5e2eef74165bf952bcbc167a3aae50bb108e0e412103065e9c67d6ef37c1b08f88d74a4b2090aa8d69f2e6ab5c116f60f05a78f2ededffffffff43ec7a579f5561a42a7e9637ad4156672735a658be2752181801f723ba3316d2030000006a47304402201206d240830694b0153b4a93620a49e631dc9d6520f78c8de21c8cd9ae5d82dd02207c3028f1866014f0ed6ad2e7a4f80f3bcf0fa03804f3a12e1e4b93713aacacb6412103065e9c67d6ef37c1b08f88d74a4b2090aa8d69f2e6ab5c116f60f05a78f2ededffffffff43ec7a579f5561a42a7e9637ad4156672735a658be2752181801f723ba3316d2040000006b483045022100e3ad638878cd2fc47f7c72991e1971deb8ec4eae149515634247b6e61f17f53e02203060e526e11f00e0a78b2ba789b2d8079dd3aa3da93146e4062a84e113308bfb412103065e9c67d6ef37c1b08f88d74a4b2090aa8d69f2e6ab5c116f60f05a78f2ededffffffff43ec7a579f5561a42a7e9637ad4156672735a658be2752181801f723ba3316d2050000006b483045022100dc9d34c14466f891fc61dfd036b1e12eeb54215074fc9dc11923b213bc6034e2022035b231f0e81dfb90d82fadd3eae278c48720507858db264c80ee013e8a72aaf1412103065e9c67d6ef37c1b08f88d74a4b2090aa8d69f2e6ab5c116f60f05a78f2ededffffffff020000000000000000266a026d2414dd763c90ae1a5677d925c680673bba0a5e2874050c53656e64206d657373616765efee01000000000017a914dd763c90ae1a5677d925c680673bba0a5e2874058700000000",
	}},
}

var sendTests = []SendTest{
	sendTest0simple,
	sendTest1simpleNoMessage,
	sendTest2p2sh,
	sendTest2p2shNoMessage,
	sendTest4,
	sendTest5,
}
